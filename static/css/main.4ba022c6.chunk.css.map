{"version":3,"sources":["webpack://src/index.css","webpack://src/layouts/TheStack.css","webpack://src/components/Box.css","webpack://src/layouts/TheCenter.css","webpack://src/layouts/TheCluster.css","webpack://src/layouts/TheSidebar.css","webpack://src/layouts/TheSwitcher.css"],"names":[],"mappings":"AAAA,EACE,qBACF,CAEA,KACE,sCAAyC,CACzC,uBAAyB,CACzB,gBAA2B,CAC3B,kBAAmB,CACnB,YAAa,CACb,QACF,CAEA,WACE,eAAgB,CAChB,aACF,CAEA,SACE,gCAAiC,CACjC,gCAAiC,CACjC,sBACF,CAEA,IACE,cACF,CAEA,EACE,oBACF,CC9BA,OACE,YAAa,CACb,qBAAsB,CACtB,0BAA2B,CAC3B,cACF,CAEA,WACE,uBACF,CCTA,KAEE,sBAAuB,CACvB,gCAAiC,CACjC,gCAAiC,CAGjC,6CAA8C,CAC9C,2CACF,CCTA,aDCE,aCaA,CAdF,QACI,sBAAuB,CAEvB,gBAAiB,CACjB,iBAAkB,CAClB,cASF,CCdF,SACI,YAAa,CACb,eACF,CAEA,WACE,YAAa,CACb,cAAe,CACf,0BAA2B,CAC3B,kBAAmB,CACnB,8BACF,CAEA,aACE,2BACF,CCdF,SACI,eAAgB,CAChB,WAAY,CACZ,kBAAmB,CACnB,iBACF,CAEA,WACE,YAAa,CACb,cAAe,CACf,8BACF,CAEA,aACE,4BAA6B,CAC7B,WAAY,CAEZ,2BACF,CAGA,uBAEE,YAAa,CACb,aAAc,CACd,iDACF,CC3BF,UACI,iBAAkB,CAClB,YAAa,CACb,WACF,CAEA,YACE,YAAa,CACb,cAAe,CAEf,8BACF,CAEA,cACE,WAAY,CACZ,iEAAkE,CAElE,2BACF,CAMA,oEAEE,eACF","file":"main.4ba022c6.chunk.css","sourcesContent":["* {\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: Helvetica, Arial, sans-serif;\n  --border: 4px solid black;\n  --padding: calc(1rem * 1.4);\n  --border-thick: 4px;\n  padding: 2rem;\n  margin: 0;\n}\n\n.container {\n  max-width: 900px;\n  margin: 0 auto;\n}\n\n.wrapper {\n  border-width: var(--border-thick);\n  border: var(--border-thick) solid;\n  padding: var(--padding);\n}\n\nimg {\n  max-width: 100%;\n}\n\np{\n  margin-bottom: 1.5rem;\n}",".stack {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  --space: 1.5rem;\n}\n\n.stack > * + * {\n  margin-top: var(--space);\n}",".box {\n  display: block;\n  padding: var(--padding);\n  border-width: var(--border-thick);\n  border: var(--border-thick) solid;\n  /* background-color: rgba(8, 217, 214, 1); */\n  /* ↓ For high contrast mode */\n  outline: var(--border-thick) solid transparent;\n  outline-offset: calc(var(--border-thick) * -1);\n}",".center {\n    box-sizing: content-box;\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 60ch;\n    /* ↓ Intrinsic Centering: That is, centering elements based on their natural, content-based widths. */\n    /* display: flex;\n    flex-direction: column;\n    align-items: center; */\n  \n    /* ↓ Gutters (i.e. 1em) */\n    /* padding-left: 1em;\n    padding-right: 1em; */\n  }",".cluster {\n    --space: 1rem;\n    overflow: hidden;\n  }\n  \n  .cluster > * {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    align-items: center;\n    margin: calc(var(--space) / 2 * -1);\n  }\n  \n  .cluster > * > * {\n    margin: calc(var(--space) / 2);\n  }","/* ↓ targets the intermediary wrapper */\n.sidebar {\n    overflow: hidden;\n    --space: 1em;\n    --side-width: 15rem;\n    --content-min: 50%;\n  }\n  \n  .sidebar > * {\n    display: flex;\n    flex-wrap: wrap;\n    margin: calc((var(--space) / 2) * -1);\n  }\n  \n  .sidebar > * > * {\n    flex-basis: var(--side-width);\n    flex-grow: 1;\n    /* ↓ applies to both elements */\n    margin: calc((var(--space) / 2));\n  }\n  \n  /* ↓ if is a right sidebar (side: right) -> :first-child */\n  .sidebar > * > :last-child {\n    /* ↓ grow from nothing */\n    flex-basis: 0;\n    flex-grow: 999;\n    min-width: calc(var(--content-min) - var(--space));\n  }",".switcher {\n    --threshold: 30rem;\n    --space: 1rem;\n    --large: calc(1 + 7 / 10);\n  }\n  \n  .switcher > * {\n    display: flex;\n    flex-wrap: wrap;\n    /* ↓ Multiply by -1 to make negative */\n    margin: calc(var(--space) / 2 * -1);\n  }\n  \n  .switcher > * > * {\n    flex-grow: 1;\n    flex-basis: calc((var(--threshold) - (100% - var(--space))) * 999);\n    /* ↓ Half the value to each element, combining to make the whole */\n    margin: calc(var(--space) / 2);\n  }\n  \n  /* .switcher > * > :nth-child(1) {\n    flex-grow: var(--large);\n  } */\n  \n  .switcher > * > :nth-last-child(n + 4),\n  .switcher > * > :nth-last-child(n + 4) ~ * {\n    flex-basis: 100%;\n  }"]}